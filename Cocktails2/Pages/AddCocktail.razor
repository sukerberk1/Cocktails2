@page "/add-cocktail"
@using Cocktails2.Application.Services.Interfaces
@using Cocktails2.Domain.Entities
@using Cocktails2.Domain.Enums
@inject IIngredientService ingredientService

<PageTitle>Cock's cocktails - add a new one</PageTitle>


@searchString

<div class="row">
    <div class="col-md-6">

        <div class="mb-3">
            <label for="exampleInputEmail1" class="form-label">Search for an ingredient</label>
            <input type="text" class="form-control" @oninput="(e)=> HandleSearchInput(e.Value.ToString())">
        </div>

        <div class="list-group">
            @if (availableIngredients == null)
            {
                <a href="#" class="list-group-item list-group-item-action">
                    <div class="d-flex w-100 justify-content-between">
                        <h5 class="mb-1">Loading...</h5>
                    </div>
                </a>
            }
            else
            {
                @foreach (var ingredient in availableIngredients)
                {
                    if (chosenIngredients.Contains(ingredient))
                    {
                        <div class="card mb-3  bg-secondary" style="max-width: 540px;" @onclick="()=>ChooseIngredient(ingredient)">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@ingredient.PhotoUrl.OriginalString" class="img-fluid rounded-start card-img" alt="ingredient photo">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@ingredient.Name</h5>
                                    <p class="card-text">@ingredient.Description</p>
                                    <p class="card-text"><small class="text-muted">@Enum.GetName(typeof(IngredientType), ingredient.Type)</small></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    }
                    else
                    {
                    <div class="card mb-3" style="max-width: 540px;" @onclick="()=>ChooseIngredient(ingredient)">
                        <div class="row g-0">
                            <div class="col-md-4">
                                <img src="@ingredient.PhotoUrl.OriginalString" class="img-fluid rounded-start card-img" alt="ingredient photo">
                            </div>
                            <div class="col-md-8">
                                <div class="card-body">
                                    <h5 class="card-title">@ingredient.Name</h5>
                                    <p class="card-text">@ingredient.Description</p>
                                    <p class="card-text"><small class="text-muted">@Enum.GetName(typeof(IngredientType), ingredient.Type)</small></p>
                                </div>
                            </div>
                        </div>
                    </div>
                    }
                }
            }

        </div>
    </div>

    <div class="col-md-6">
        @foreach(var chosenIngredient in chosenIngredients)
        {
            <div class="card mb-3" style="max-width: 540px;" @onclick="()=>RemoveIngredient(chosenIngredient)">
                <div class="row g-0">
                    <div class="col-md-4">
                        <img src="@chosenIngredient.PhotoUrl.OriginalString" class="img-fluid rounded-start card-img" alt="ingredient photo">
                    </div>
                    <div class="col-md-8">
                        <div class="card-body">
                            <h5 class="card-title">@chosenIngredient.Name</h5>
                            <p class="card-text">@chosenIngredient.Description</p>
                            <p class="card-text"><small class="text-muted">@Enum.GetName(typeof(IngredientType), chosenIngredient.Type)</small></p>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

</div>




@code {
    private List<Ingredient> ingredients = new();

    private List<Ingredient> availableIngredients = new();

    private List<Ingredient> chosenIngredients = new();

    private string searchString = String.Empty;

    protected override async Task OnInitializedAsync()
    {
        ingredients = (List<Ingredient>) await ingredientService.GetAllIngredientsAsync();
        availableIngredients = ingredients;
    }

    private void ChooseIngredient(Ingredient ingr)
    {
        if (!chosenIngredients.Contains(ingr))
            chosenIngredients.Add(ingr);
    }
    private void RemoveIngredient(Ingredient ingr)
    {
        chosenIngredients.Remove(ingr);
    }

    private void HandleSearchInput(string search)
    {
        searchString = search;
        if (search == null)
        {
            availableIngredients = ingredients;
            return;
        }
        availableIngredients = ingredients.Where(ingr => ingr.Name.ToLower().StartsWith(search.ToLower())).ToList();
    }
}
